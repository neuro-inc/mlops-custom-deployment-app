{
  "$defs": {
    "ApoloFilesMount": {
      "properties": {
        "storage_uri": {
          "$ref": "#/$defs/ApoloFilesPath"
        },
        "mount_path": {
          "$ref": "#/$defs/MountPath"
        },
        "mode": {
          "$ref": "#/$defs/ApoloMountMode",
          "default": {
            "mode": "rw",
            "__type__": "ApoloMountMode"
          }
        }
      },
      "required": [
        "storage_uri",
        "mount_path"
      ],
      "title": "ApoloFilesMount",
      "type": "object",
      "x-description": "Configure Apolo Files mount within the application workloads.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Apolo Files Mount",
      "x-type": "ApoloFilesMount"
    },
    "ApoloFilesPath": {
      "properties": {
        "path": {
          "title": "Path",
          "type": "string",
          "x-description": "Provide the Apolo Storage path starting with `storage:` to locate your files.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Storage Path"
        }
      },
      "required": [
        "path"
      ],
      "title": "ApoloFilesPath",
      "type": "object",
      "x-description": "Specify the path within the Apolo Files application to read from or write to.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Apolo Files Path",
      "x-type": "ApoloFilesFile"
    },
    "ApoloMountMode": {
      "properties": {
        "mode": {
          "$ref": "#/$defs/ApoloMountModes",
          "default": "rw",
          "x-description": "Select the access mode for the mount, such as read-only or read-write.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Mount Mode"
        }
      },
      "title": "ApoloMountMode",
      "type": "object",
      "x-description": "Configure how Apolo Files should be mounted into the application\u2019s workload environment.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Apolo Files Mount",
      "x-type": "ApoloMountMode"
    },
    "ApoloMountModes": {
      "enum": [
        "r",
        "rw"
      ],
      "title": "ApoloMountModes",
      "type": "string"
    },
    "MLFlowTrackingServerURL": {
      "properties": {
        "internal_url": {
          "anyOf": [
            {
              "$ref": "#/$defs/RestAPI"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "Internal URL to access the service. This route is not protected by platform authorization and only workloads from the same project can access it.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Internal URL"
        },
        "external_url": {
          "anyOf": [
            {
              "$ref": "#/$defs/RestAPI"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "External URL for accessing the service from outside the cluster. This route might be secured by platform authorization and is accessible from any network with a valid platform authorization token that has appropriate permissions.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "External URL"
        }
      },
      "title": "MLFlowTrackingServerURL",
      "type": "object",
      "x-description": "The URL to access the MLFlow server.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "MLFlow Server URL",
      "x-type": "MLFlowTrackingServerURL"
    },
    "MountPath": {
      "properties": {
        "path": {
          "title": "Path",
          "type": "string",
          "x-description": "Specify the absolute path inside the container where the volume should be mounted.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Path"
        }
      },
      "required": [
        "path"
      ],
      "title": "MountPath",
      "type": "object",
      "x-description": "Specify the absolute path.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Mount Path",
      "x-type": "MountPath"
    },
    "Networking": {
      "properties": {
        "http_auth": {
          "default": true,
          "title": "Http Auth",
          "type": "boolean",
          "x-description": "Whether to use HTTP authentication.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "HTTP Authentication"
        }
      },
      "title": "Networking",
      "type": "object",
      "x-description": "Network settings",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Networking Settings",
      "x-type": "Networking"
    },
    "Preset": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "x-description": "The name of the preset.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Resource Preset"
        }
      },
      "required": [
        "name"
      ],
      "title": "Preset",
      "type": "object",
      "x-description": "Select the resource preset used per service replica.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Resource Preset",
      "x-type": "Preset"
    },
    "RestAPI": {
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "x-description": "The hostname of the HTTP endpoint.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Hostname"
        },
        "port": {
          "default": 80,
          "exclusiveMinimum": 0,
          "title": "Port",
          "type": "integer",
          "x-description": "The port of the HTTP endpoint.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Port"
        },
        "protocol": {
          "default": "http",
          "title": "Protocol",
          "type": "string",
          "x-description": "The protocol to use, e.g., http or https.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Protocol"
        },
        "timeout": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": 30.0,
          "title": "Timeout",
          "x-description": "Connection timeout in seconds.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Connection Timeout"
        },
        "base_path": {
          "default": "/",
          "title": "Base Path",
          "type": "string"
        },
        "api_type": {
          "const": "rest",
          "default": "rest",
          "title": "Api Type",
          "type": "string"
        }
      },
      "required": [
        "host"
      ],
      "title": "RestAPI",
      "type": "object",
      "x-description": "HTTP API Configuration.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "HTTP API",
      "x-type": "OpenAICompatibleEmbeddingsRestAPI"
    },
    "StorageMounts": {
      "properties": {
        "mounts": {
          "description": "List of ApoloStorageMount objects to mount external storage paths",
          "items": {
            "$ref": "#/$defs/ApoloFilesMount"
          },
          "title": "Mounts",
          "type": "array"
        }
      },
      "title": "StorageMounts",
      "type": "object",
      "x-description": "Mount external storage paths",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Storage Mounts",
      "x-type": "StorageMounts"
    },
    "VSCodeSpecificAppInputs": {
      "properties": {
        "override_code_storage_mount": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApoloFilesMount"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "Override Apolo Files mount within the application workloads. If not set, Apolo will automatically mount \"storage:.apps/vscode/vscode-app/code\" to \"/home/coder/project\"",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Override Default Storage Mounts"
        }
      },
      "title": "VSCodeSpecificAppInputs",
      "type": "object",
      "x-description": "VSCode App configuration.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "VSCode App",
      "x-type": "VSCodeSpecificAppInputs"
    }
  },
  "properties": {
    "preset": {
      "$ref": "#/$defs/Preset"
    },
    "vscode_specific": {
      "$ref": "#/$defs/VSCodeSpecificAppInputs"
    },
    "extra_storage_mounts": {
      "anyOf": [
        {
          "$ref": "#/$defs/StorageMounts"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "Additional storage mounts for the application.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Extra Storage Mounts"
    },
    "networking": {
      "$ref": "#/$defs/Networking",
      "default": {
        "http_auth": true,
        "__type__": "Networking"
      },
      "x-description": "Network settings for the application."
    },
    "mlflow_integration": {
      "anyOf": [
        {
          "$ref": "#/$defs/MLFlowTrackingServerURL"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "MLFlow integration settings for the application. If not set, MLFlow integration will not be enabled.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "MLFlow Integration"
    }
  },
  "required": [
    "preset",
    "vscode_specific"
  ],
  "title": "VSCodeAppInputs",
  "type": "object"
}
