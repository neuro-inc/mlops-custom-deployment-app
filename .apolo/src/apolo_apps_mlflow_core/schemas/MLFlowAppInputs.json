{
  "$defs": {
    "ApoloAuth": {
      "properties": {
        "type": {
          "const": "apolo_auth",
          "default": "apolo_auth",
          "description": "Authentication type identifier",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "ApoloAuth",
      "type": "object",
      "x-description": "Use Apolo platform's built-in authentication and authorization. Requires authenticated user credentials with appropriate permissions.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Apolo Platform Authentication",
      "x-type": "ApoloAuth"
    },
    "ApoloFilesPath": {
      "properties": {
        "path": {
          "title": "Path",
          "type": "string",
          "x-description": "Provide the Apolo Storage path starting with `storage:` to locate your files.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Storage Path"
        }
      },
      "required": [
        "path"
      ],
      "title": "ApoloFilesPath",
      "type": "object",
      "x-description": "Specify the path within the Apolo Files application to read from or write to.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Apolo Files Path",
      "x-type": "ApoloFilesFile"
    },
    "AuthIngressMiddleware": {
      "properties": {
        "name": {
          "pattern": "^platform",
          "title": "Name",
          "type": "string",
          "x-description": "Name of the authentication middleware (with namespace) to apply to ingress traffic.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Middleware Name"
        }
      },
      "required": [
        "name"
      ],
      "title": "AuthIngressMiddleware",
      "type": "object",
      "x-description": "Configure authentication middleware for ingress traffic.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "Authentication Ingress Middleware",
      "x-type": "AuthIngressMiddleware"
    },
    "CustomAuth": {
      "properties": {
        "type": {
          "const": "custom_auth",
          "default": "custom_auth",
          "description": "Authentication type identifier",
          "title": "Type",
          "type": "string"
        },
        "middleware": {
          "$ref": "#/$defs/AuthIngressMiddleware",
          "x-description": "Custom authentication middleware configuration.",
          "x-title": "Authentication Middleware"
        }
      },
      "required": [
        "middleware"
      ],
      "title": "CustomAuth",
      "type": "object",
      "x-description": "Use a custom authentication middleware for this ingress. Allows integration with custom authentication providers.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Custom Authentication",
      "x-type": "CustomAuth"
    },
    "IngressHttp": {
      "properties": {
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApoloAuth"
            },
            {
              "$ref": "#/$defs/NoAuth"
            },
            {
              "$ref": "#/$defs/CustomAuth"
            }
          ],
          "title": "Auth",
          "x-description": "Configure authentication for this ingress. Choose Apolo platform authentication, custom middleware, or no authentication.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Authentication"
        }
      },
      "title": "IngressHttp",
      "type": "object",
      "x-description": "Enable access to your application over the internet using HTTPS.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Enable HTTP Ingress",
      "x-type": "IngressHttp"
    },
    "MLFlowMetadataPostgres": {
      "properties": {
        "storage_type": {
          "const": "postgres",
          "default": "postgres",
          "title": "Storage Type",
          "type": "string",
          "x-description": "Storage type for MLFlow metadata.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Storage Type"
        },
        "postgres_uri": {
          "$ref": "#/$defs/PostgresURI",
          "x-description": "Connection URI to the PostgreSQL metadata database."
        }
      },
      "required": [
        "postgres_uri"
      ],
      "title": "MLFlowMetadataPostgres",
      "type": "object",
      "x-description": "Use PostgreSQL server as metadata storage for MLFlow.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Postgres",
      "x-type": "MLFlowMetadataPostgres"
    },
    "MLFlowMetadataSQLite": {
      "properties": {
        "storage_type": {
          "const": "sqlite",
          "default": "sqlite",
          "title": "Storage Type",
          "type": "string",
          "x-description": "Storage type for MLFlow metadata.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Storage Type"
        }
      },
      "title": "MLFlowMetadataSQLite",
      "type": "object",
      "x-description": "Use SQLite on a dedicated block device as metadata store for MLFlow.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "SQLite",
      "x-type": "MLFlowMetadataSQLite"
    },
    "NoAuth": {
      "properties": {
        "type": {
          "const": "no_auth",
          "default": "no_auth",
          "description": "Authentication type identifier",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "NoAuth",
      "type": "object",
      "x-description": "Disable authentication for this ingress. The application will be publicly accessible without any authentication.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "No Authentication",
      "x-type": "NoAuth"
    },
    "PostgresURI": {
      "description": "Configuration for the Postgres connection URI.",
      "properties": {
        "uri": {
          "title": "Uri",
          "type": "string",
          "x-description": "Specify full Postgres connection URI. E.g. 'postgresql://user:pass@host:5432/db'",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "URI"
        }
      },
      "required": [
        "uri"
      ],
      "title": "PostgresURI",
      "type": "object",
      "x-description": "Full Postgres connection URI configuration.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Postgres URI",
      "x-type": "PostgresURI"
    },
    "Preset": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "x-description": "The name of the preset.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Resource Preset"
        }
      },
      "required": [
        "name"
      ],
      "title": "Preset",
      "type": "object",
      "x-description": "Select the resource preset used per service replica.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Resource Preset",
      "x-type": "Preset"
    }
  },
  "description": "The overall MLFlow app config, referencing:\n  - 'preset' for CPU/GPU resources\n  - 'ingress' for external URL\n  - 'metadata_storage' for MLFlow settings\n  - 'artifact_store' for artifacts location",
  "properties": {
    "preset": {
      "$ref": "#/$defs/Preset"
    },
    "ingress_http": {
      "$ref": "#/$defs/IngressHttp"
    },
    "metadata_storage": {
      "anyOf": [
        {
          "$ref": "#/$defs/MLFlowMetadataSQLite"
        },
        {
          "$ref": "#/$defs/MLFlowMetadataPostgres"
        }
      ],
      "title": "Metadata Storage"
    },
    "artifact_store": {
      "$ref": "#/$defs/ApoloFilesPath",
      "default": {
        "path": "storage:mlflow-artifacts",
        "__type__": "ApoloFilesPath"
      },
      "x-description": "Use Apolo Files to store your MLFlow artifacts (model binaries, dependency files, etc). Example absolute path: 'storage://cluster/myorg/proj/mlflow-artifacts' or relative path: 'storage:mlflow-artifacts'.",
      "x-title": "Artifact Store"
    }
  },
  "required": [
    "preset",
    "ingress_http",
    "metadata_storage"
  ],
  "title": "MLFlowAppInputs",
  "type": "object",
  "x-description": "Configuration for the MLFlow application.",
  "x-is-advanced-field": false,
  "x-meta-type": "inline",
  "x-title": "MLFlow Inputs"
}
