{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "custom-deployment.fullname" . }}
  labels:
    {{- include "custom-deployment.labels" $ | nindent 4 }}
  annotations:
    traefik.ingress.kubernetes.io/service.sticky: "true"
    traefik.ingress.kubernetes.io/server-strategy: "roundrobin"
    traefik.ingress.kubernetes.io/response-buffering: "false"
    traefik.ingress.kubernetes.io/request-buffering: "false"
    traefik.ingress.kubernetes.io/websocket: "true"
    traefik.ingress.kubernetes.io/affinity: "true"
    traefik.ingress.kubernetes.io/client-body-buffer-size: "0"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.http3: "false"
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  rules:
  {{- if .Values.ingress.hosts }}
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ include "custom-deployment.fullname" $ }}
                port:
                  name: {{ .portName }}
          {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
