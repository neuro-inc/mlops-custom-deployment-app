apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "custom-deployment.fullname" . }}
  labels:
    {{- include "custom-deployment.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "custom-deployment.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- include "custom-deployment.storageAnnotations" . | nindent 8 }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "custom-deployment.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "custom-deployment.apoloPodLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "custom-deployment.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          env:
            {{- range .Values.container.env }}
              - name: {{ .name }}
                {{- if kindIs "string" .value }}
                value: {{ .value | quote }}
                {{- else }}
                {{ toYaml .value | nindent 14 }}
                {{- end }}
            {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if (.Values.container).command }}
          command:
            {{- toYaml .Values.container.command | nindent 12 }}
          {{- end }}
          {{- if (.Values.container).entrypoint }}
          entrypoint:
            {{- toYaml .Values.container.entrypoint | nindent 12 }}
          {{- end }}
          {{- if (.Values.container).args }}
          args:
            {{- toYaml .Values.container.args | nindent 12 }}
          {{- end }}
          ports:
            {{- range .Values.service.ports }}
            - containerPort: {{ .containerPort }}
              protocol: TCP
              name: {{ .name }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ (index .Values.service.ports 0).containerPort }}
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 20
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: {{ (index .Values.service.ports 0).containerPort }}
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 20
            successThreshold: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.dockerconfigjson }}
      imagePullSecrets:
        - name: {{ include "custom-deployment.dockerconfig-secret-name" . }}
      {{- end }}
